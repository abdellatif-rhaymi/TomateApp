package com.example.tomatosapp.activities;

import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.tomatosapp.R;
import com.example.tomatosapp.adapters.ChatAdapter;
import com.example.tomatosapp.model.ChatMessage;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChatbotActivity extends AppCompatActivity {

    private RecyclerView chatRecyclerView;
    private EditText messageInput;
    private ImageButton sendButton;
    private ChatAdapter chatAdapter;
    private List<ChatMessage> chatMessages;
    private FirebaseFirestore db;
    private FirebaseAuth auth;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chatbot);

        // Initialize Firebase
        db = FirebaseFirestore.getInstance();
        auth = FirebaseAuth.getInstance();

        // Initialize views
        chatRecyclerView = findViewById(R.id.chat_recycler_view);
        messageInput = findViewById(R.id.message_input);
        sendButton = findViewById(R.id.send_button);

        // Setup RecyclerView
        chatMessages = new ArrayList<>();
        chatAdapter = new ChatAdapter(chatMessages);
        chatRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        chatRecyclerView.setAdapter(chatAdapter);

        // Add welcome message
        addBotMessage("üçÖ Bonjour! Je suis votre assistant sp√©cialis√© dans la protection des tomates et leurs maladies. " +
                "Je peux vous aider avec les maladies, parasites, carences nutritionnelles et conseils de culture. " +
                "Posez-moi vos questions!");

        sendButton.setOnClickListener(v -> sendMessage());

        // Load previous chat history
        loadChatHistory();
    }

    private void sendMessage() {
        String message = messageInput.getText().toString().trim();
        if (!message.isEmpty()) {
            // Add user message
            addUserMessage(message);
            messageInput.setText("");

            // Process and generate bot response
            generateBotResponse(message);
        }
    }

    private void addUserMessage(String message) {
        chatMessages.add(new ChatMessage(message, true));
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        chatRecyclerView.smoothScrollToPosition(chatMessages.size() - 1);

        // Save to Firestore
        saveMessageToFirestore(message, true);
    }

    private void addBotMessage(String message) {
        chatMessages.add(new ChatMessage(message, false));
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        chatRecyclerView.smoothScrollToPosition(chatMessages.size() - 1);

        // Save to Firestore
        if (!message.contains("Bonjour! Je suis votre assistant")) { // Don't save welcome message repeatedly
            saveMessageToFirestore(message, false);
        }
    }

    private void saveMessageToFirestore(String message, boolean isUser) {
        if (auth.getCurrentUser() == null) {
            Toast.makeText(this, "Utilisateur non connect√©", Toast.LENGTH_SHORT).show();
            return;
        }

        String userEmail = auth.getCurrentUser().getEmail();
        if (userEmail == null || userEmail.isEmpty()) {
            Toast.makeText(this, "Email utilisateur introuvable", Toast.LENGTH_SHORT).show();
            return;
        }

        Map<String, Object> chatData = new HashMap<>();
        chatData.put("message", message);
        chatData.put("isUser", isUser);
        chatData.put("timestamp", System.currentTimeMillis());
        chatData.put("date", new java.util.Date());

        // Utiliser l'email comme ID du document utilisateur
        db.collection("utilisateurs").document(userEmail)
                .collection("chats").add(chatData)
                .addOnSuccessListener(documentReference -> {
                    // Message sauvegard√© avec succ√®s
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "Erreur de sauvegarde: " + e.getMessage(), Toast.LENGTH_SHORT).show();
                });
    }

    private void loadChatHistory() {
        if (auth.getCurrentUser() == null || auth.getCurrentUser().getEmail() == null) {
            return;
        }

        String userEmail = auth.getCurrentUser().getEmail();

        db.collection("utilisateurs").document(userEmail)
                .collection("chats")
                .orderBy("timestamp", Query.Direction.ASCENDING)
                .limit(50) // Limiter aux 50 derniers messages
                .get()
                .addOnSuccessListener(queryDocumentSnapshots -> {
                    chatMessages.clear();
                    queryDocumentSnapshots.forEach(document -> {
                        String message = document.getString("message");
                        Boolean isUser = document.getBoolean("isUser");
                        if (message != null && isUser != null) {
                            chatMessages.add(new ChatMessage(message, isUser));
                        }
                    });
                    chatAdapter.notifyDataSetChanged();
                    if (!chatMessages.isEmpty()) {
                        chatRecyclerView.smoothScrollToPosition(chatMessages.size() - 1);
                    }
                });
    }

    private void generateBotResponse(String userMessage) {
        String query = userMessage.toLowerCase().trim();
        String response = "";

        // Maladies fongiques
        if (containsAny(query, "mildiou", "blight", "phytophthora")) {
            response = "üçÑ **MILDIOU (Phytophthora infestans)**\n\n" +
                    "**Sympt√¥mes:** Taches brunes sur feuilles avec duvet blanc, brunissement des tiges\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Bouillie bordelaise (cuivre) en pr√©vention\n" +
                    "‚Ä¢ √âliminer parties infect√©es\n" +
                    "‚Ä¢ Am√©liorer a√©ration entre plants\n" +
                    "‚Ä¢ Arroser au pied, √©viter les feuilles\n" +
                    "‚Ä¢ Paillis pour √©viter √©claboussures\n\n" +
                    "**Pr√©vention:** Rotation des cultures, vari√©t√©s r√©sistantes";
        }
        else if (containsAny(query, "alternariose", "alternaria", "tache concentrique")) {
            response = "üîÑ **ALTERNARIOSE (Alternaria solani)**\n\n" +
                    "**Sympt√¥mes:** Taches brunes concentriques sur feuilles √¢g√©es\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Fongicides √† base de cuivre\n" +
                    "‚Ä¢ Suppression feuilles infect√©es\n" +
                    "‚Ä¢ Renforcement plante (potassium)\n" +
                    "‚Ä¢ √âviter stress hydrique";
        }
        else if (containsAny(query, "septoriose", "septoria", "tache grise")) {
            response = "‚ö™ **SEPTORIOSE (Septoria lycopersici)**\n\n" +
                    "**Sympt√¥mes:** Petites taches grises avec centre clair\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Fongicides pr√©ventifs\n" +
                    "‚Ä¢ √âlimination feuilles touch√©es\n" +
                    "‚Ä¢ Espacement plants pour a√©ration";
        }

        // Parasites
        else if (containsAny(query, "puceron", "aphid", "insecte vert")) {
            response = "üêõ **PUCERONS**\n\n" +
                    "**Identification:** Petits insects verts/noirs sous feuilles\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Savon noir dilu√© (pulv√©risation)\n" +
                    "‚Ä¢ Huile de neem\n" +
                    "‚Ä¢ Coccinelles (auxiliaires)\n" +
                    "‚Ä¢ Jet d'eau pour d√©loger\n\n" +
                    "**Pr√©vention:** Plantes compagnes (basilic, ≈ìillets d'Inde)";
        }
        else if (containsAny(query, "araign√©e", "spider", "t√©tranyque", "acarien")) {
            response = "üï∑Ô∏è **ARAIGN√âES ROUGES (T√©tranyques)**\n\n" +
                    "**Sympt√¥mes:** Feuilles jaunies, toiles fines, points jaunes\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Augmenter humidit√© ambiante\n" +
                    "‚Ä¢ Douches fr√©quentes sous feuilles\n" +
                    "‚Ä¢ Acaricides naturels (huile blanche)\n" +
                    "‚Ä¢ Pr√©dateurs naturels (phytos√©iules)";
        }
        else if (containsAny(query, "aleurode", "mouche blanche", "whitefly")) {
            response = "ü¶ü **ALEURODES (Mouches blanches)**\n\n" +
                    "**Sympt√¥mes:** Petites mouches blanches, feuilles collantes\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ Pi√®ges jaunes englu√©s\n" +
                    "‚Ä¢ Savon insecticide\n" +
                    "‚Ä¢ Huile de neem\n" +
                    "‚Ä¢ Encarsia formosa (auxiliaire)";
        }

        // Carences nutritionnelles
        else if (containsAny(query, "jaun", "yellow", "chlorose", "carence")) {
            response = "üíõ **JAUNISSEMENT DES FEUILLES**\n\n" +
                    "**Causes possibles:**\n" +
                    "‚Ä¢ Carence azote: Jaunissement g√©n√©ral\n" +
                    "‚Ä¢ Carence magn√©sium: Jaunissement entre nervures\n" +
                    "‚Ä¢ Carence fer: Jeunes feuilles jaunes\n" +
                    "‚Ä¢ Exc√®s d'eau: Jaunissement + fl√©trissement\n\n" +
                    "**Solutions:**\n" +
                    "‚Ä¢ Engrais √©quilibr√© NPK\n" +
                    "‚Ä¢ Sulfate de magn√©sium (sel d'Epsom)\n" +
                    "‚Ä¢ Ch√©late de fer si sol calcaire\n" +
                    "‚Ä¢ Drainage si exc√®s d'eau";
        }

        // Probl√®mes de fructification
        else if (containsAny(query, "fleur", "flower", "fruit", "pollinisation", "nouaison")) {
            response = "üå∏ **PROBL√àMES DE FRUCTIFICATION**\n\n" +
                    "**Chute des fleurs:**\n" +
                    "‚Ä¢ Temp√©ratures extr√™mes (>32¬∞C ou <15¬∞C)\n" +
                    "‚Ä¢ Stress hydrique\n" +
                    "‚Ä¢ Exc√®s d'azote\n\n" +
                    "**Solutions:**\n" +
                    "‚Ä¢ Ombrage si trop chaud\n" +
                    "‚Ä¢ Arrosage r√©gulier\n" +
                    "‚Ä¢ R√©duire engrais azot√©\n" +
                    "‚Ä¢ Pollinisation manuelle (pinceau)\n" +
                    "‚Ä¢ Secouer plants le matin";
        }
        else if (containsAny(query, "pourri", "rot", "moisissure", "botrytis")) {
            response = "ü¶† **POURRITURE DES FRUITS**\n\n" +
                    "**Types courants:**\n" +
                    "‚Ä¢ Pourriture grise (Botrytis): Duvet gris\n" +
                    "‚Ä¢ Pourriture apicale: Tache noire au bout\n\n" +
                    "**Traitement:**\n" +
                    "‚Ä¢ √âliminer fruits atteints\n" +
                    "‚Ä¢ R√©duire humidit√©\n" +
                    "‚Ä¢ Calcium si pourriture apicale\n" +
                    "‚Ä¢ Fongicides pr√©ventifs\n" +
                    "‚Ä¢ √âviter blessures aux fruits";
        }

        // Conseils g√©n√©raux de culture
        else if (containsAny(query, "culture", "plantation", "conseil", "comment", "quand")) {
            response = "üå± **CONSEILS DE CULTURE**\n\n" +
                    "**Plantation:**\n" +
                    "‚Ä¢ Distance: 50-60cm entre plants\n" +
                    "‚Ä¢ Sol: Riche, bien drain√©, pH 6-7\n" +
                    "‚Ä¢ Exposition: Soleil, √† l'abri du vent\n\n" +
                    "**Entretien:**\n" +
                    "‚Ä¢ Arrosage: R√©gulier au pied\n" +
                    "‚Ä¢ Paillage: Conserver humidit√©\n" +
                    "‚Ä¢ Tuteurage: Indispensable\n" +
                    "‚Ä¢ Taille: Gourmands et feuilles basses\n\n" +
                    "**Fertilisation:** NPK √©quilibr√© + compost";
        }

        // Recherche par sympt√¥mes
        else if (containsAny(query, "tache", "spot", "marque")) {
            if (containsAny(query, "brun", "brown", "noir", "black")) {
                response = "üîç **TACHES BRUNES/NOIRES**\n\n" +
                        "**Localisations possibles:**\n" +
                        "‚Ä¢ Feuilles: Mildiou, Alternariose\n" +
                        "‚Ä¢ Fruits: Anthracnose, coup de soleil\n" +
                        "‚Ä¢ Tiges: Chancre, mildiou\n\n" +
                        "Pouvez-vous pr√©ciser o√π se trouvent les taches et leur aspect ?";
            } else {
                response = "üîç **DIAGNOSTIC DES TACHES**\n\n" +
                        "Pour un diagnostic pr√©cis, d√©crivez-moi:\n" +
                        "‚Ä¢ Couleur: brune, jaune, noire ?\n" +
                        "‚Ä¢ Localisation: feuilles, fruits, tiges ?\n" +
                        "‚Ä¢ Forme: ronde, irr√©guli√®re ?\n" +
                        "‚Ä¢ Pr√©sence de duvet ou moisissure ?\n\n" +
                        "Ces d√©tails m'aideront √† identifier le probl√®me!";
            }
        }

        // R√©ponse par d√©faut
        else {
            response = "üçÖ **ASSISTANT TOMATES**\n\n" +
                    "Je suis sp√©cialis√© dans la protection des tomates. Je peux vous aider avec:\n\n" +
                    "ü¶† **Maladies:** Mildiou, alternariose, septoriose\n" +
                    "üêõ **Parasites:** Pucerons, araign√©es rouges, aleurodes\n" +
                    "üíõ **Carences:** Azote, potassium, magn√©sium\n" +
                    "üå∏ **Fructification:** Pollinisation, chute des fleurs\n" +
                    "üå± **Culture:** Plantation, entretien, fertilisation\n\n" +
                    "D√©crivez-moi votre probl√®me en d√©tail pour un diagnostic pr√©cis!";
        }

        addBotMessage(response);
    }

    private boolean containsAny(String text, String... keywords) {
        for (String keyword : keywords) {
            if (text.contains(keyword)) {
                return true;
            }
        }
        return false;
    }
}